/* eslint-disable react/jsx-no-comment-textnodes */
import { type NextPage } from "next"
import Head from "next/head";
import { useRouter } from "next/router"
import { useEffect, useState } from "react";
import { EditableListItem } from "../../components/EditableListItem";

interface PlayingVideo {
    id: string,
    key: number
}

const Playlist: NextPage = () => {

    const router = useRouter();
    const { playlist } = router.query;
    const [ playing, setPlaying ] = useState<string | undefined>(undefined);
    const [ error, setError ] = useState<boolean>(false);    
    const [ playlistItems, setPlaylistItems ] = useState<string[]>([]);

    useEffect(() => {
        console.log(playlist);
        if(playlist)
        fetch(`http://localhost:8080/playlists/${playlist}`)
        .then(resp => resp.text())
        .then(value => setPlaylistItems(value.split("\n")))
        .catch(error => {
            console.error(error);
            setError(error);
        });
    }, [playlist])

    const playlistComponents = playlistItems.map((item, index) => {
        try {
            const url =  new window.URL(item);
            const vid = url.searchParams.get("v");
            const activeClasses = "bg-yellow-500/10";
            return (
                <button className={`flex text-white space-x-2 bg-purple-500/10 rounded-md p-2 items-center hover:translate-x-1 transition-all w-full ${vid === playing ? activeClasses : ""}`}
                onClick={() => { setPlaying(vid || undefined) }}
                >
                    <div>
                        {/* eslint-disable-next-line @next/next/no-img-element */}
                        <img src={`https://img.youtube.com/vi/${vid}/0.jpg`} alt={item} className="w-16 h-9 rounded-md"/>
                    </div>
                    <div>
                        <span>{item}</span>
                    </div>
                </button>
            )
        } catch {
            return <EditableListItem key={index} default={item}/>
        }
    })

    return (
        <>  
        <Head>
            <title>Homebrewd</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center space-y-8 px-4 py-8 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Home <span className="text-[hsl(280,100%,70%)]">Brewd</span>
          </h1>
            { playlistItems.length > 0 && !error ? 
            <>
                <iframe src={`https://youtube.com/embed/${playing}?autoplay=1&loop=1`}
                width="500"
                height="315"
                className="rounded-lg shadow-lg "
                >
                </iframe>
                <h2 className=" text-white text-3xl">
                    {typeof playlist === "string" && playlist.split(".txt")[0]}
                </h2>
                <ul className="space-y-2">
                    {playlistComponents}
                </ul>        
            </>
            :
            <h1 className="text-white text-3xl">Loading Playlist {playlist}...</h1>
            }
            {
                error ? false : 
                    <h1>
                    {error}
                    </h1>
            }
        </div>
      </main>  
        </>
    )
}
export default Playlist;